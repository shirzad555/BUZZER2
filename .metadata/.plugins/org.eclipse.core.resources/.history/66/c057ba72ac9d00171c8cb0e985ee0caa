#include "console.h"
#include "usart.h"

#include "stdint.h"
#include <stdarg.h>
#include <string.h>
#include <stdio.h>


char buffer[MAX_UART_PACKET_SIZE];

/******************************************************************************
* Name    : RPrintf
*
* Purpose : Outputs data for debugging
*
* Input   : port - selection of output port. UART, DBGU, or UART_DBGU
*           format - string to output
*            ... - any additional parameters to add into the string
*
* Output  :
*
* Notes   :
*   Example usage:
*       UCHAR value = 0x5;
*       RPrintf(DBGU, "Display this value [0x%02X]\r\n", value);
*
*   Output on DBGU console:
*       Display this value [0x05]
*******************************************************************************/
void RPrintf(ConsolePort port, char const *format, ...)
{
   va_list arg;
   uint32_t length;

   // Check for valid input
   if( format == NULL )
   {
//      ERROR("RPrintf:: Invalid Input ");
   }

   // Set start of argument list
   va_start(arg, format);

   // Determine length of formatted string
   length = vsprintf(buffer, format, arg);

   // Set end of argument (reset argument pointer)
   va_end(arg);

   // Output message
   switch(port)
   {
      case UART:
//         if(s_showConsole)
//         {
            TxUsart((uint8_t*)buffer, length);
//         }
         break;

      case DBGU:
#ifdef DBGU_ENABLED
#if defined(SWDEV_V2) || defined(DEV_BOARD)
         TxDbgu((UINT8*)buffer, length);
#else
//         if(s_showConsole)
//         {
            TxUsart((uint8_t*)buffer, length);
//         }
#endif
#endif
         break;

      case UART_DBGU:
//         if(s_showConsole)
//         {
            TxUsart((uint8_t*)buffer, length);
//         }
         break;

            default:
                break;
   }
}
